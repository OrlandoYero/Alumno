@using Alumno.Domain.Model
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@model IPagedList<StudentData>
@{
    ViewData["Title"] = "Index";
}

<div class="row" style="padding-top: 10px">
    <div class="col-md-10 col-md-offset-1">
        <div class="panel">
            <div class="panel-body">
                <div class="row" style="padding-bottom:5px">
                    @using (Html.BeginForm((string)ViewBag.Action, (string)ViewBag.Controller, FormMethod.Get, new { @class = "form-horizontal", id = "submit_form" }))
                    {
                    <div class="col-md-3" id="PageSizeController">
                        Mostrar
                        <select class="form-control" name="selectedSizePage" id="selectedSizePage" style="font-size:small">
                            <option id="10">5</option>
                            <option id="15">10</option>
                        </select>
                        entradas
                    </div>
                    }
                </div>
                @if (Model != null && Model.Count != 0)
                {
                    <table class="table" style="height: 300px;overflow-y: scroll;">
                        <thead>
                            <tr>
                                <th scope="col">Ids</th>
                                <th scope="col">Nombres</th>
                                <th scope="col">A. materno</th>
                                <th scope="col">A. paterno</th>
                                <th scope="col">F. nacimiento</th>
                                <th scope="col">Grado</th>
                                <th scope="col">Grupo</th>
                                <th scope="col">Calificación</th>
                                <th scope="col">Clave</th>
                                <th scope="col"></th>
                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var student in Model)
                            {
                                <tr>
                                    <td>@student.Id</td>
                                    <td>@student.Name</td>
                                    <td>@student.MotherLastName</td>
                                    <td>@student.FatherLastName</td>
                                    <td>@student.Birthdate.ToString("dd/MM/yyyy")</td>
                                    <td>@student.Grade</td>
                                    <td>@student.Group</td>
                                    <td>@student.Calification</td>
                                    <td style="vertical-align: middle; font-weight:bold" id="key_@student.Id">@student.Key</td>
                                    <td>
                                        <div class="input-group" style="width: 100px">
                                            <input id="number_rotation_@student.Id" type="number" class="form-control" value="0" />
                                            <span class="input-group-btn">
                                                <button onclick="rotate_string(@student.Id)" class="btn btn-success" type="button"><span class="glyphicon glyphicon-repeat" style="font-size:12px"></span></button>
                                            </span>
                                        </div>
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                    <hr />
                    <div class="row">
                        <div class="col-md-12" style="padding: 0px">
                            <div class="col-md-6" style="margin-top:15px">Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount</div>
                            @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page, selectedSizePage = ViewBag.SelectedSizePage }))
                        </div>
                    </div>
                }
                else
                {
                    <span>Nada para mostrar</span>
                }
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">
        active_selected();
        function rotate_string(id) {
            var str = $('#key_' + id).html();
            var r = $('#number_rotation_' + id).val();
            if (is_valid(str) && is_valid(r)) {
                r = r % str.length;
                if (r < 0) {
                    // numero negativo
                    r *= -1;
                    $('#key_' + id).html(str.substring(str.length - r, str.length) + str.substring(0, str.length - r));
                } else if (r > 0) {
                    // numero positivo
                    $('#key_' + id).html(str.substring(r, str.length) + str.substring(0, r));
                }
            }
        }

        function is_valid(value) {
            if (value !== undefined && value !== "") {
                return true;
            } else {
                return false;
            }
        }

        function active_selected() {
            var selectedOption = @Html.Raw("'" + ViewBag.SelectedSizePage + "'")

            $('#selectedSizePage').change ( function () {
                $('#submit_form').submit();
            });
            if (selectedOption === null && selectedOption === undefined) {
                $("#selectedSizePage").val(5);
            } else {
                $("#selectedSizePage").val(selectedOption);
            }
        }
    </script>
}