@using Alumno.Domain.Model
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@model IPagedList<StudentData>
@{
    ViewData["Title"] = "Index";
}

<style>
    td {
        vertical-align: middle !important;
    }
</style>
<div class="row" style="padding-top: 10px">
    <div class="col-md-10 col-md-offset-1">
        <div class="panel">
            <div class="panel-body" style="height: 300px;overflow-y: scroll;">
                @if (Model != null && Model.Count != 0)
                {
                    <div class="row" style="padding-bottom:5px">
                        @using (Html.BeginForm((string)ViewBag.Action, (string)ViewBag.Controller, FormMethod.Get, new { @class = "form-horizontal" }))
                        {
                            <div class="col-md-3" id="PageSizeController">
                                Mostrar
                                <select class="form-control" name="selectedSizePage" id="selectedSizePage" style="font-size:small">
                                    <option id="10">5</option>
                                    <option id="15">10</option>
                                </select>
                                entradas
                            </div>
                            <div class="col-md-3 pull-right" style="padding-right:0">
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <span class="fa fa-search"></span>
                                    </div>
                                    <div class="input-group-btn">
                                        <input type="submit" id="submit_filter" value="Buscar" class="btn btn-primary" />
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col">Ids</th>
                                <th scope="col">Nombres</th>
                                <th scope="col">A. materno</th>
                                <th scope="col">A. paterno</th>
                                <th scope="col">F. nacimiento</th>
                                <th scope="col">Grado</th>
                                <th scope="col">Grupo</th>
                                <th scope="col">Calificación</th>
                                <th scope="col">Clave</th>
                                <th scope="col"></th>
                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var student in Model)
                            {
                                <tr>
                                    <td>@student.Id</td>
                                    <td>@student.Name</td>
                                    <td>@student.MotherLastName</td>
                                    <td>@student.FatherLastName</td>
                                    <td>@student.Birthdate.ToString("dd/mm/yyyy")</td>
                                    <td>@student.Grade</td>
                                    <td>@student.Group</td>
                                    <td>@student.Calification</td>
                                    <td style="vertical-align: middle; font-weight:bold" id="@student.Id">@student.Key</td>
                                    <td>
                                        <div class="input-group" style="width: 100px">
                                            <input id="number_rotation" type="number" class="form-control" value="0" />
                                            <span class="input-group-btn">
                                                <button onclick="rotate_string(@student.Id)" class="btn btn-success" type="button"><span class="glyphicon glyphicon-repeat" style="font-size:12px"></span></button>
                                            </span>
                                        </div>
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                    <hr />
                    <div class="row">
                        <div class="col-md-12" style="padding: 0px">
                            <div class="col-md-6" style="margin-top:15px">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</div>
                            @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page, selectedSizePage = ViewBag.SelectedSizePage }))
                        </div>
                    </div>
                }
                else
                {
                    <span>Nada para mostrar</span>
                }
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">
        function rotate_string(id) {
            var str = $('#' + id).html();
            var r = $('#number_rotation').val();
            if (is_valid(str) && is_valid(r)) {
                r = r % str.length;
                if (r < 0) {
                    // numero negativo
                    r *= -1;
                    $('#' + id).html(reverse_string(str.substring(str.length - r, str.length)) + str.substring(0, str.length - r));
                } else if (r > 0) {
                    // numero positivo
                    $('#' + id).html(str.substring(r, str.length) + str.substring(0, r));
                }
            }
        }

        function is_valid(value) {
            if (value !== undefined && value !== "") {
                return true;
            } else {
                return false;
            }
        }

        // from https://medium.com/sonyamoisset/reverse-a-string-in-javascript-a18027b8e91c
        function reverse_string(str) {
            var splitString = str.split("");
            var reverseArray = splitString.reverse();
            var joinArray = reverseArray.join("");
            return joinArray;
        }
    </script>

    <script>
        var selectedOption = @Html.Raw("'" + ViewBag.SelectedSizePage + "'")
        $('#selectedSizePage option').removeProp("selected");
        $('#selectedSizePage').change ( function () {
            $('#submit_filter').trigger('click');
        });
        if (selectedOption === null && selectedOption === undefined) {
            $('#selectedSizePage #10').prop("selected","selected");
        } else {
            $('#selectedSizePage #' + selectedOption).prop("selected", "selected");
        }
    </script>
}